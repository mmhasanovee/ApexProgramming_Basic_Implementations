@RestResource(urlMapping='/Cases/*')
global with sharing class RestCaseManager {
@HttpGet
    global static Case getCaseById(){
        
        RestRequest request = RestContext.request;
       String caseId= request.requestURI.substring(request.requestURI.lastIndexOf('/')+1);
   		Case result = [Select CaseNumber, Subject, Status, Origin, Priority from Case where Id=:caseId];
        return result;
    }
    
    @HttpPost //create a new record
    
    global static Id createCase(String sub, String status, String org, String pri){
        
       Case newCase= new Case(Subject=sub, Status=status, Origin=org, Priority=pri);
        insert newCase;
        return newCase.Id;
        
        /* {
How to insert files...
"sub":"NewCaseName",
"status":"UnderGoverner",
"org":"New Organization Name",
"pri":"High"



}*/
        
    }
    
    @HttpDelete
    global static void  deleteCase(){
        RestRequest request = RestContext.request;
  	String caseId= request.requestURI.substring(request.requestURI.lastIndexOf('/')+1);
	 Case thisCase=  [Select Id from Case where id=:caseId];
        delete thisCase;
    }
    
    @HttpPut
    global static ID upsertCase(String sub, String sta, String ori, String pri, String id){
        
     Case thisCase=   new Case(Id=id,Subject=sub,status=sta,origin=ori,priority=pri);
   	 upsert thisCase;
     return thisCase.Id;
    }
    
    @HttpPatch
    global static ID updateCaseFields(){
        
        RestRequest request = RestContext.request;
  	String caseId= request.requestURI.substring(request.requestURI.lastIndexOf('/')+1);
        Case thisCase=  [Select Id from Case where id=:caseId];
        
       Map<String,Object> params =(Map<String,Object>)JSON.deserializeUntyped(request.requestBody.toString());
       /*JSON is a format that encodes
objects in a string. Serialization means to convert an object 
into that string, and deserialization is its inverse operation 
(convert string -> object). ... Serialization can convert 
these complex objects into byte strings for such use*/
        
        for(String fieldName:params.keySet()){
            
            thisCase.put(fieldName,params.get(fieldName));
            
        }
        
        update thisCase;
        return thisCase.Id;
    }
    
    /*{

"origin":"Email",
"priority":"High"

} */
    
    
}
